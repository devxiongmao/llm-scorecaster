name: Create GitHub Release

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: write
  pull-requests: write

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    if: startsWith(github.head_ref, 'release-')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Generate Changelog
        run: |
          make generate-changelog
          echo "Changelog generated and updated."

      - name: Determine Version Number
        run: |
          make determine-version
          echo "App Version Determined."

      - name: Commit Changelog and Version Updates
        run: |
          TAG_NAME="v$(cat VERSION)"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add CHANGELOG.md VERSION
          git commit -m "Release $TAG_NAME"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          git push origin ${{ github.head_ref }}

      - name: Read Changelog
        id: read_changelog
        run: |
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_ENV
          cat CHANGELOG.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: |
            ## Changelog

            ${{ env.CHANGELOG_CONTENT }}
          draft: false
          prerelease: false
