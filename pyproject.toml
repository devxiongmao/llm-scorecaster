[tool.poetry]
name = "llm-scorecaster"
version = "1.0.0"
description = "This repo calculates and outputs metrics for LLM prompts and responses"
authors = ["Jon Psaila <jonathan_psaila@outlook.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
# Core dependencies - always installed
pydantic = "^2.11.9"
fastapi = "^0.117.1"
uvicorn = { extras = ["standard"], version = "^0.36.0" }
pydantic-settings = "^2.10.1"
redis = "^6.4.0"
celery = "^5.5.3"
python-multipart = "^0.0.20"
httpx = "^0.28.1"
psutil = "^7.1.0"

# Optional dependencies for specific metrics
bert-score = { version = "^0.3.13", optional = true }
sacrebleu = { version = "^2.5.1", optional = true }
rouge-score = { version = "^0.1.2", optional = true }

# Development dependencies
pytest = { version = "^8.4.2", optional = true }
pytest-asyncio = { version = "^1.2.0", optional = true }
black = { version = "^25.9.0", optional = true }
pyright = { version = "^1.1.406", optional = true }
pylint = { version = "^3.3.8", optional = true }
pytest-httpserver = { version = "^1.1.3", optional = true }

[tool.poetry.extras]
# Individual metric extras
bert = ["bert-score"]
bleu = ["sacrebleu"]
rouge = ["rouge-score"]

# Grouped extras
nlp-metrics = ["bert-score", "sacrebleu", "rouge-score"]

# Development extras
test = ["pytest", "pytest-asyncio", "pytest-httpserver"]
lint = ["black", "pyright", "pylint"]
dev = ["pytest", "pytest-asyncio", "pytest-httpserver", "black", "pyright", "pylint"]

# Convenience extras
all = [
  "bert-score",
  "sacrebleu",
  "rouge-score",
  "pytest",
  "pytest-asyncio",
  "black",
  "pyright",
  "pylint",
  "pytest-httpserver"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.pyright]
exclude = ["**/__pycache__"]
defineConstant = { DEBUG = true }

reportMissingImports = "error"
reportMissingTypeStubs = false

[tool.pylint]
# Basic settings
disable = [

  "R0801", # duplicate-code
  "W0212", # protected-access
  "W0718", # broad-exception-caught
]

[tool.pylint.design]
max-attributes = 10

max-line-length = 100
jobs = 4

[tool.pylint.'FORMAT']
max-line-length = 100
