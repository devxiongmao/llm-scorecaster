[tool.poetry]
name = "llm-scorecaster"
version = "0.0.1"
description = "This repo calculates and outputs metrics for LLM prompts and responses"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.10.6"
bert-score = "^0.3.13"
fastapi = "^0.116.1"
uvicorn = { extras = ["standard"], version = "^0.35.0" }
pydantic-settings = "^2.10.1"
redis = "^6.4.0"
celery = "^5.5.3"
python-multipart = "^0.0.20"
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
httpx = "^0.28.1"
black = "^25.1.0"
pyright = "^1.1.403"
pylint = "^3.3.8"
sacrebleu = "^2.5.1"
rouge-score = "^0.1.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
asyncio_mode = "auto"


[tool.pyright]
exclude = ["**/__pycache__"]
defineConstant = { DEBUG = true }

reportMissingImports = "error"
reportMissingTypeStubs = false

[tool.pylint]
# Basic settings
disable = [

  "C0114", # missing-module-docstring
  "C0116", # missing-function-docstring
  "C0301", # line-too-long
  "E1136", # unsubscriptable-object
  "R0801", # duplicate-code
  "W0212", # protected-access
  "W0231", # super-init-not-called
  "W0621", # redefined-outer-name
  "W0707", # raise-missing-from
  "W0718", # broad-exception-caught
]

max-line-length = 100
jobs = 4

[tool.pylint.'FORMAT']
max-line-length = 150 # Too long, shorten to 100
